const api = require('client/api');
const FriendProfile = require('./FriendProfile');
const React = require('react');
const UserProfile = require('./UserProfile');

module.exports = class Profiles extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      errorMessage: null,
      loading: true,
      selected: Object.create(null),
      user: null,
    };
  }
  async fetchData(name) {
    let user = null;
    let errorMessage = null;
    try {
      user = await api({url: `/user/${name}`});
    } catch (e) {
      errorMessage = 'An error occurred. Double-check your profile URL.'
    }
    // Discard old/invalid requests.
    if (name !== this.props.name) {
      return;
    }
    this.setState({
      errorMessage,
      loading: false,
      selected: Object.create(null),
      user,
    });
    this.props.onListChange(user ? [user.id] : []);
  }
  toggleFriend(id) {
    const selected = Object.create(null);
    Object.assign(selected, this.state.selected);
    if (selected[id]) {
      delete selected[id];
    } else {
      selected[id] = true;
    }
    this.setState({selected});
    const list = Object.keys(selected);
    list.push(this.state.user.id);
    list.sort();
    this.props.onListChange(list);
  }
  componentDidMount() {
    this.fetchData(this.props.name);
  }
  componentWillReceiveProps(nextProps) {
    if (nextProps.name === this.props.name) {
      return;
    }
    this.setState({
      errorMessage: null,
      loading: true,
      user: null,
    });
    this.fetchData(nextProps.name);
  }
  renderInner() {
    if (this.state.loading) {
      return (
        <section>Loading...</section>
      );
    } else if (this.state.user) {
      return (
        <div>
          <section>
            <UserProfile user={this.state.user} />
          </section>
          <section className='friends'>
            <p>{"Select the friends you'd like to play with."}</p>
            <p>{"Scroll down to view the games you have in common."}</p>
            <div className='container'>{
              this.state.user.friends.map((friend) => (
                <FriendProfile
                  friend={friend}
                  key={friend.id}
                  onClick={() => this.toggleFriend(friend.id)}
                  selected={this.state.selected[friend.id]}
                />
              ))
            }</div>
          </section>
        </div>
      );
    } else {
      return (
        <section>{
          this.state.errorMessage || 'An unknown error occurred.'
        }</section>
      );
    }
  }
  render() {
    return (
      <div className='component-profiles'>{this.renderInner()}</div>
    );
  }
}
